name: Deploy to ECR

on:
  push:
    branches:
      - CI_ecr-test

jobs:
  push-to-ecr:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      IMAGE_URI: 879084048693.dkr.ecr.ap-northeast-2.amazonaws.com/my_image_hub
      VERSION: ${{ github.ref_name }}_${{ github.run_number }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Restore keystore.p12 from base64
        run: |
          echo "${{ secrets.KEYSTORE_FILE_BASE64 }}" | base64 -d > src/main/resources/keystore.p12

      - name: Create application-prop.properties from template
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          export KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
          envsubst < src/main/resources/application-prop.properties.template > src/main/resources/application-prop.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Clean and Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Set lowercase tagging version name
        run: echo "VERSION=$(echo '${{ env.VERSION }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker image Build and Tag
        working-directory: .
        run: |
          docker build -t $IMAGE_URI:latest .
          docker tag $IMAGE_URI:latest $IMAGE_URI:$VERSION

      - name: Docker Image Push
        working-directory: .
        run: |
          docker push $IMAGE_URI:$VERSION
          docker push $IMAGE_URI:latest