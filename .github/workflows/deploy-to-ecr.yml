name: Build & Push Docker Image

on:
  workflow_dispatch:
#  push:
#    branches:
#      - CI_ecr-test

jobs:
  push-to-ecr:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

#    env:
#      IMAGE_URI: 879084048693.dkr.ecr.ap-northeast-2.amazonaws.com/my_image_hub
#      VERSION: ${{ github.ref_name }}_${{ github.run_number }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Restore keystore.p12 from base64
        run: |
          echo "${{ secrets.KEY_FILE_BASE_64 }}" | -d > src/main/resources/keystore.p12

      - name: Check keystore.p12 metadata
        run: |
          ls -lh src/main/resources/keystore.p12
          file src/main/resources/keystore.p12
          test -s src/main/resources/keystore.p12 || (echo "keystore.p12 is empty or missing" && exit 1)

      - name: Check keystore.p12 metadata
        run: |
          ls -lh src/main/resources/keystore.p12
          file src/main/resources/keystore.p12

      - name: Create application-prop.properties from template
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          export KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
          envsubst < src/main/resources/application-prop.properties.template > src/main/resources/application-prop.properties
          
          echo "✅ application-prop.properties generated"
          echo "===== GENERATED PROPERTIES ====="
          cat src/main/resources/application-prop.properties
          echo "================================"
          
          test -s src/main/resources/application-prop.properties || (echo "❌ Failed to create application-prop.properties" && exit 1)

#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Clean and Build with Gradle
#        run: |
#          chmod +x ./gradlew
#          ./gradlew clean build
#
#      - name: Set lowercase tagging version name
#        run: echo "VERSION=$(echo '${{ env.VERSION }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-access-key-id: ${{ secrets.ECR_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.ECR_SECRET_ACCESS_KEY }}
#          aws-region: ap-northeast-2
#
#      - name: Login to Amazon ECR
#        uses: aws-actions/amazon-ecr-login@v2
#
#      - name: Docker image Build and Tag
#        working-directory: .
#        run: |
#          docker build -t $IMAGE_URI:latest .
#          docker tag $IMAGE_URI:latest $IMAGE_URI:$VERSION
#
#      - name: Docker Image Push
#        working-directory: .
#        run: |
#          docker push $IMAGE_URI:$VERSION
#          docker push $IMAGE_URI:latest